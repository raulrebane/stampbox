<?php
/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
    function generateRandomBytes($length,$cryptographicallyStrong=true)
    {
            $bytes='';
            if(function_exists('openssl_random_pseudo_bytes'))
            {
                    $bytes=openssl_random_pseudo_bytes($length,$strong);
                    if(strlen($bytes)>=$length)
                            return substr($bytes,0,$length);
            }

            if(function_exists('mcrypt_create_iv') &&
                    ($bytes=mcrypt_create_iv($length, MCRYPT_DEV_URANDOM))!==false &&
                    strlen($bytes)>=$length)
            {
                    return substr($bytes,0,$length);
            }

            if(($file=@fopen('/dev/urandom','rb'))!==false &&
                    ($bytes=@fread($file,$length))!==false &&
                    (fclose($file) || true) &&
                    strlen($bytes)>=$length)
            {
                    return substr($bytes,0,$length);
            }

    }

    function generateRandomString($length,$cryptographicallyStrong=true)
    {
            if(($randomBytes=generateRandomBytes($length+2,$cryptographicallyStrong))!==false)
                    return strtr(substr(base64_encode($randomBytes),0,$length),array('+'=>'_','/'=>'~'));
            return false;
    }

    function issuestamps_fn($job)
    {
        $jsonstr = $job->workload();
        openlog("STAMPBOX", LOG_NDELAY, LOG_LOCAL0);
        syslog(LOG_INFO, "Got issue stamps request with: " .$jsonstr);
        $stampsparams = json_decode($jsonstr);
        $dbconnection = pg_connect("host=localhost port=6432 dbname=stampbox user=sbweb"); 
        $stamps['batch_id'] = $stampsparams->stampid;
        $stamps['customer_id'] = $stampsparams->customer_id;
        $stamps['status'] = 'A';
        $stamps['timestamp'] = 'now()';

        for ($insert_count = 1; $insert_count <= $stampsparams->howmany; $insert_count++)
        {
            // replaced with token generated by CSecurityManager
            //$stamps['stamp_token'] = generateRandomString(32, TRUE);
            // Performing SQL insert
            $res = pg_insert($dbconnection, 'ds.t_stamps_issued', $stamps);
        }
        $credittrans['customer_id'] = $stamps['customer_id'];
        $credittrans['transaction_code'] = 'SCR';
        $credittrans['amount'] = $stampsparams->howmany;
        $credittrans['stamp_id'] = NULL;
        $credittrans['description'] = $stampsparams->description;
        $credittrans['transaction_date'] = 'now()';
        $res = pg_insert($dbconnection, 'ds.t_stamps_transactions', $credittrans);
        $res = pg_query($dbconnection, "update ds.t_account set stamps_bal = stamps_bal + ".$stampsparams->howmany ." where customer_id = " .$stamps['customer_id'] .";");
        pg_close($dbconnection);

        closelog();
        return json_encode(array('status'=>'OK'));
    }

$worker= new GearmanWorker();
$worker->addServer("127.0.0.1", 4730);
$worker->addFunction("issuestamps", "issuestamps_fn");
while ($worker->work());

?>
